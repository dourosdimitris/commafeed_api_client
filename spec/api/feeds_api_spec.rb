=begin
#CommaFeed API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::FeedsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FeedsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::FeedsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FeedsApi' do
    it 'should create an instance of FeedsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::FeedsApi)
    end
  end

  # unit tests for export_opml
  # OPML export
  # Export an OPML file of the user&#39;s subscriptions
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'export_opml test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for fetch_feed
  # Fetch a feed
  # Fetch a feed by its url
  # @param feed_info_request feed url
  # @param [Hash] opts the optional parameters
  # @return [FeedInfo]
  describe 'fetch_feed test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_feed
  # get feed
  # @param id user id
  # @param [Hash] opts the optional parameters
  # @return [Subscription]
  describe 'get_feed test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_feed_entries
  # Get feed entries
  # Get a list of feed entries
  # @param id id of the feed
  # @param read_type all entries or only unread ones
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :newer_than only entries newer than this
  # @option opts [Integer] :offset offset for paging
  # @option opts [Integer] :limit limit for paging, default 20, maximum 1000
  # @option opts [String] :order ordering
  # @option opts [String] :keywords search for keywords in either the title or the content of the entries, separated by spaces, 3 characters minimum
  # @return [Entries]
  describe 'get_feed_entries test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_feed_entries_as_feed
  # Get feed entries as a feed
  # Get a feed of feed entries
  # @param id id of the feed
  # @param read_type all entries or only unread ones
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :newer_than only entries newer than this
  # @option opts [Integer] :offset offset for paging
  # @option opts [Integer] :limit limit for paging, default 20, maximum 1000
  # @option opts [String] :order date ordering
  # @option opts [String] :keywords search for keywords in either the title or the content of the entries, separated by spaces, 3 characters minimum
  # @return [nil]
  describe 'get_feed_entries_as_feed test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_feed_favicon
  # Fetch a feed&#39;s icon
  # Fetch a feed&#39;s icon
  # @param id subscription id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_feed_favicon test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for import_opml
  # OPML import
  # Import an OPML file, posted as a FORM with the &#39;file&#39; name
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'import_opml test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mark_feed_entries
  # Mark feed entries
  # Mark feed entries as read (unread is not supported)
  # @param mark_request Mark request
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'mark_feed_entries test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for modify_feed
  # Modify a subscription
  # Modify a feed subscription
  # @param feed_modification_request subscription id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'modify_feed test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for queue_all_for_refresh
  # Queue all feeds of the user for refresh
  # Manually add all feeds of the user to the refresh queue
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'queue_all_for_refresh test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for queue_for_refresh
  # Queue a feed for refresh
  # Manually add a feed to the refresh queue
  # @param id_request Feed id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'queue_for_refresh test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscribe
  # Subscribe to a feed
  # Subscribe to a feed
  # @param subscribe_request subscription request
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'subscribe test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subscribe_from_url
  # Subscribe to a feed
  # Subscribe to a feed
  # @param url feed url
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'subscribe_from_url test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for unsubscribe
  # Unsubscribe from a feed
  # Unsubscribe from a feed
  # @param id_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unsubscribe test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
