=begin
#CommaFeed API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for CommafeedClient::FeedCategoriesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FeedCategoriesApi' do
  before do
    # run before each test
    @api_instance = CommafeedClient::FeedCategoriesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FeedCategoriesApi' do
    it 'should create an instance of FeedCategoriesApi' do
      expect(@api_instance).to be_instance_of(CommafeedClient::FeedCategoriesApi)
    end
  end

  # unit tests for add_category
  # Add a category
  # Add a new feed category
  # @param add_category_request 
  # @param [Hash] opts the optional parameters
  # @return [Integer]
  describe 'add_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for collapse_category
  # Collapse a category
  # Save collapsed or expanded status for a category
  # @param collapse_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'collapse_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_category
  # Delete a category
  # Delete an existing feed category
  # @param id_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_category_entries
  # Get category entries
  # Get a list of category entries
  # @param id id of the category, &#39;all&#39; or &#39;starred&#39;
  # @param read_type all entries or only unread ones
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :newer_than only entries newer than this
  # @option opts [Integer] :offset offset for paging
  # @option opts [Integer] :limit limit for paging, default 20, maximum 1000
  # @option opts [String] :order ordering
  # @option opts [String] :keywords search for keywords in either the title or the content of the entries, separated by spaces, 3 characters minimum
  # @option opts [String] :excluded_subscription_ids comma-separated list of excluded subscription ids
  # @option opts [String] :tag keep only entries tagged with this tag
  # @return [Entries]
  describe 'get_category_entries test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_category_entries_as_feed
  # Get category entries as feed
  # Get a feed of category entries
  # @param id id of the category, &#39;all&#39; or &#39;starred&#39;
  # @param read_type all entries or only unread ones
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :newer_than only entries newer than this
  # @option opts [Integer] :offset offset for paging
  # @option opts [Integer] :limit limit for paging, default 20, maximum 1000
  # @option opts [String] :order date ordering
  # @option opts [String] :keywords search for keywords in either the title or the content of the entries, separated by spaces, 3 characters minimum
  # @option opts [String] :excluded_subscription_ids comma-separated list of excluded subscription ids
  # @option opts [String] :tag keep only entries tagged with this tag
  # @return [nil]
  describe 'get_category_entries_as_feed test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_root_category
  # Get root category
  # Get all categories and subscriptions of the user
  # @param [Hash] opts the optional parameters
  # @return [Category]
  describe 'get_root_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_unread_count
  # Get unread count for feed subscriptions
  # @param [Hash] opts the optional parameters
  # @return [Array<UnreadCount>]
  describe 'get_unread_count test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for mark_category_entries
  # Mark category entries
  # Mark feed entries of this category as read
  # @param mark_request category id, or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'mark_category_entries test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for modify_category
  # Rename a category
  # Rename an existing feed category
  # @param category_modification_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'modify_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
