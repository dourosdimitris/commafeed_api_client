=begin
#CommaFeed API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

# Common files
require 'openapi_client/api_client'
require 'openapi_client/api_error'
require 'openapi_client/version'
require 'openapi_client/configuration'

# Models
require 'openapi_client/models/add_category_request'
require 'openapi_client/models/admin_save_user_request'
require 'openapi_client/models/category'
require 'openapi_client/models/category_modification_request'
require 'openapi_client/models/collapse_request'
require 'openapi_client/models/entries'
require 'openapi_client/models/entry'
require 'openapi_client/models/feed_info'
require 'openapi_client/models/feed_info_request'
require 'openapi_client/models/feed_modification_request'
require 'openapi_client/models/id_request'
require 'openapi_client/models/mark_request'
require 'openapi_client/models/multiple_mark_request'
require 'openapi_client/models/password_reset_request'
require 'openapi_client/models/profile_modification_request'
require 'openapi_client/models/registration_request'
require 'openapi_client/models/server_info'
require 'openapi_client/models/settings'
require 'openapi_client/models/sharing_settings'
require 'openapi_client/models/star_request'
require 'openapi_client/models/subscribe_request'
require 'openapi_client/models/subscription'
require 'openapi_client/models/tag_request'
require 'openapi_client/models/unread_count'
require 'openapi_client/models/user_model'

# APIs
require 'openapi_client/api/admin_api'
require 'openapi_client/api/feed_categories_api'
require 'openapi_client/api/feed_entries_api'
require 'openapi_client/api/feeds_api'
require 'openapi_client/api/server_api'
require 'openapi_client/api/users_api'

module OpenapiClient
  class << self
    # Customize default settings for the SDK using block.
    #   OpenapiClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
